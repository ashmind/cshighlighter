//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HighlighterLib.Templating.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HighlighterLib.Templating.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Upload - CS Hightligter&lt;/title&gt;
        ///    @foreach (var css in Model.Stylesheets)
        ///    {
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            @Raw(css)
        ///        &lt;/style&gt;
        ///    }
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;div&gt;
        ///        &lt;div id=&quot;formattedCode&quot; class=&quot;formattedCode&quot;&gt;@Raw(Model.PreformattedHtml)&lt;/div&gt;
        ///    &lt;/div&gt;
        ///    &lt;script type=&quot;text/javascript&quot;&gt;
        ///        @Raw(Model.Javascript)
        ///    &lt;/script&gt;
        ///&lt;/body&gt;
        ///&lt;/html&gt;
        ///.
        /// </summary>
        internal static string FormattedSingleFile {
            get {
                return ResourceManager.GetString("FormattedSingleFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (function() {
        ///    var all = document.querySelectorAll(&quot;#formattedCode *&quot;);
        ///    for (var i = 0; i &lt; all.length; i++) {
        ///        var element = all[i];
        ///        if (element.data &amp;&amp; element.data.hover) {
        ///            var hoverId = element.data.hover;
        ///            element.addEventListener(&quot;mouseover&quot;, function () {
        ///                var toHighlight = document.querySelectorAll(&quot;.&quot; + hoverId);
        ///                for(var j = 0; j &lt; toHighlight.length; j++) {
        ///                    toHighlight[j].classList.add(&quot;highlig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HightlightingScript {
            get {
                return ResourceManager.GetString("HightlightingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .formattedCode {
        ///    font-family: &quot;Consolas&quot;, &quot;Courier New&quot;, &quot;Andale Mono&quot;, &quot;Lucida Console&quot;, monospace;
        ///    font-size: 12pt;
        ///    line-height: 125%;
        ///    white-space: pre;
        ///}
        ///
        ///.highlighted {
        ///    background-color: aqua;
        ///}
        ///
        ///.comment {
        ///    color: green;
        ///}
        ///
        ///.keyword {
        ///    color: blue;
        ///}
        ///
        ///.stringLiteral {
        ///    color: darkred;
        ///}
        ///
        ///.numericLiteral {
        ///    color: magenta;
        ///}
        ///
        ///.identifier {
        ///    color: #2B91AF;
        ///}
        ///
        ///.region {
        ///    color: lightgray;
        ///}
        ///
        ///.localDecl {
        ///    color: black;
        ///}
        ///
        ///.lo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Style {
            get {
                return ResourceManager.GetString("Style", resourceCulture);
            }
        }
    }
}
