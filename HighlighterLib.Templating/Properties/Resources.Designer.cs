//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HighlighterLib.Templating.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HighlighterLib.Templating.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///@model IEnumerable&lt;string&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;
        ///    &lt;title&gt;Directory&lt;/title&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;ul&gt;
        ///        @foreach(var p in Model)
        ///        { 
        ///        &lt;li&gt;
        ///            &lt;a href=&quot;@p&quot;&gt;@p&lt;/a&gt;
        ///        &lt;/li&gt;
        ///        }
        ///    &lt;/ul&gt;
        ///&lt;/body&gt;
        ///&lt;/html&gt;
        ///.
        /// </summary>
        internal static string Directory {
            get {
                return ResourceManager.GetString("Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @model HighlighterLib.Templating.Models.SingleFileModel
        ///&lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Upload - CS Hightligter&lt;/title&gt;
        ///    @foreach (var css in Model.Stylesheets)
        ///    {
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            @Raw(css)
        ///        &lt;/style&gt;
        ///    }
        ///    @foreach (var item in Model.StylesheetUris)
        ///    {
        ///        &lt;link type=&quot;text/css&quot; rel=&quot;@item.AbsolutePath&quot; /&gt;
        ///    }
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    &lt;div&gt;
        ///        &lt;div id=&quot;formattedCode&quot; class=&quot;formattedCode&quot;&gt;@Raw(Model.PreformattedHtml)&lt;/div&gt;
        ///    &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FormattedSingleFile {
            get {
                return ResourceManager.GetString("FormattedSingleFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (function () {
        ///
        ///    var hoverAttrName = &quot;data-hover&quot;;
        ///    var highlightClassName = &quot;highlighted&quot;;
        ///
        ///    var mouseOver = function (element) {
        ///        return function () {
        ///            var hoverId = element.getAttribute(hoverAttrName)
        ///            var toHighlight = document.querySelectorAll(&quot;.&quot; + hoverId);
        ///            for(var j = 0; j &lt; toHighlight.length; j++) {
        ///                toHighlight[j].classList.add(highlightClassName);
        ///            }
        ///        }
        ///    };
        ///
        ///    var mouseOut = function(element) { [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HightlightingScript {
            get {
                return ResourceManager.GetString("HightlightingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .formattedCode {
        ///    font-family: &quot;Consolas&quot;, &quot;Courier New&quot;, &quot;Andale Mono&quot;, &quot;Lucida Console&quot;, monospace;
        ///    font-size: 12pt;
        ///    line-height: 125%;
        ///    white-space: pre;
        ///}
        ///
        ///.highlighted {
        ///    background-color: aqua;
        ///}
        ///
        ///.comment {
        ///    color: green;
        ///}
        ///
        ///.keyword {
        ///    color: blue;
        ///    text-decoration: none;
        ///}
        ///
        ///.stringLiteral {
        ///    color: darkred;
        ///    text-decoration: none;
        ///}
        ///
        ///.numericLiteral {
        ///    color: magenta;
        ///}
        ///
        ///.identifier {
        ///    color: #2B91AF;
        ///    text-decoration: none;
        ///} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Style {
            get {
                return ResourceManager.GetString("Style", resourceCulture);
            }
        }
    }
}
